
    global INTINIT
    global INTREAD
    global INTSTAT
    global INTWRIT

RS_IDLE     = 0<<0
RS_READABLE = 1<<0
RS_DONE     = 2<<0
RS_MASK     = 0x3

RA_DATA     = 1
RA_DONE     = 2

WS_WRITABLE = 0<<2
WS_WRITING  = 1<<2
WS_DONE     = 2<<2
WS_MASK     = 0xc

WA_DATA     = 4
WA_DONE     = 8

RESET = 128

; Init the interface.

INTINIT:
    ld a, RESET
    out (0x41), a
    ret

; Read a byte from the interface and return it in C.
; Returns 0 if no byte pending.
INTREAD:
    ld c, 0

	in a, (0x41)
	and RS_MASK
	cmp RS_READABLE
    ret z

	; Read byte from interface and put it in C.

	in a, (0x40)
	ld c, a

    ; Acknowledge DATA.

	ld a, RA_DATA
	out (0x41), a

    ; Wait for DONE.
.1
	in a, (0x41)
	and RS_MASK
	cmp RS_DONE
	jr nz, .1

    ; Acknowledge DONE.

	ld a, RA_DONE
	out (0x41), a
    ret

; Returns Z if the interface is writable.
INTSTAT:
	in a, (0x41)
	and WS_MASK
	;cmp WS_WRITABLE    ; WS_WRITABLE is zero
    ret
    
; Writes c to the interface. If 0, do nothing.
; The interface must be writable.
INTWRIT:
    ld a, c
    or a
    ret z

    out (0x40), a

    ; Ackowledge DATA.

    ld a, WA_DATA
    out (0x41), a

    ; Wait for DONE.
.1
	in a, (0x41)
	and WS_MASK
	cmp WS_DONE
	jr nz, .1

    ; Acknowledge DONE.

	ld a, WA_DONE
	out (0x41), a
    ret

; vim: ts=4 sw=4 et ft=asm

